"/pet":
  post:
    tags:
    - pet
    summary: Add a new pet to the store
    description: ''
    operationId: addPet
    responses:
      200: 
        $ref: "#/components/responses/Pet"
      405:
        $ref: "../../components/responses.yaml#/405" 
    security:
    - petstore_auth:
      - write:pets
      - read:pets
    requestBody:
      description: Pet object that needs to be added to the store
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StorePet"      
        application/xml:
          schema:
            $ref: "#/components/schemas/StorePet" 
  put:
    tags:
    - pet
    summary: Update an existing pet
    description: ''
    operationId: updatePet
    responses:
      200: 
        $ref: "#/components/responses/Pet"
      400:
        $ref: "../../components/responses.yaml#/400"
      404:
        $ref: "../../components/responses.yaml#/404"         
      405:
        $ref: "../../components/responses.yaml#/405"        
    security:
    - petstore_auth:
      - write:pets
      - read:pets
    requestBody:
      description: Pet object that needs to be added to the store
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StorePet"      
        application/xml:
          schema:
            $ref: "#/components/schemas/StorePet"
"/pet/findByStatus":
  get:
    tags:
    - pet
    summary: Finds Pets by status
    description: Multiple status values can be provided with comma separated strings
    operationId: findPetsByStatus
    parameters:
    - name: status
      in: query
      description: Status values that need to be considered for filter
      required: true
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - available
          - pending
          - sold
          default: available
    responses:
      200: 
        $ref: "#/components/responses/Pet"
      400:
        $ref: "../../components/responses.yaml#/400"
    security:
    - petstore_auth:
      - write:pets
      - read:pets
"/pet/findByTags":
  get:
    tags:
    - pet
    summary: Finds Pets by tags
    description: Muliple tags can be provided with comma separated strings. Use
      tag1, tag2, tag3 for testing.
    operationId: findPetsByTags
    parameters:
    - name: tags
      in: query
      description: Tags to filter by
      required: true
      explode: true
      schema:
        type: array
        items:
          type: string
    responses:
      200: 
        $ref: "#/components/responses/Pet"
      400:
        $ref: "../../components/responses.yaml#/400" 
    security:
    - petstore_auth:
      - write:pets
      - read:pets
    deprecated: true
"/pet/{petId}":
  get:
    tags:
    - pet
    summary: Find pet by ID
    description: Returns a single pet
    operationId: getPetById
    parameters:
    - name: petId
      in: path
      description: ID of pet to return
      required: true
      schema:
        type: integer
        format: int64
    responses:
      200: 
        $ref: "#/components/responses/Pet"
      400:
        $ref: "../../components/responses.yaml#/400"      
      404:
        $ref: "../../components/responses.yaml#/404"
    security:
    - api_key: []
  post:
    tags:
    - pet
    summary: Updates a pet in the store with form data
    description: ''
    operationId: updatePetWithForm
    parameters:
    - name: petId
      in: path
      description: ID of pet that needs to be updated
      required: true
      schema:
        type: integer
        format: int64
    responses:
      200: 
        $ref: "#/components/responses/Pet"
      405:
        $ref: "../../components/responses.yaml#/405"
    security:
    - petstore_auth:
      - write:pets
      - read:pets
    requestBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              name:
                description: Updated name of the pet
                type: string
              status:
                description: Updated status of the pet
                type: string
  delete:
    tags:
    - pet
    summary: Deletes a pet
    description: ''
    operationId: deletePet
    parameters:
    - name: api_key
      in: header
      required: false
      schema:
        type: string
    - name: petId
      in: path
      description: Pet id to delete
      required: true
      schema:
        type: integer
        format: int64
    responses:
      400:
        $ref: "../../components/responses.yaml#/400"      
      404:
        $ref: "../../components/responses.yaml#/404"
    security:
    - petstore_auth:
      - write:pets
      - read:pets
"/pet/{petId}/uploadImage":
  post:
    tags:
    - pet
    summary: uploads an image
    description: ''
    operationId: uploadFile
    parameters:
    - name: petId
      in: path
      description: ID of pet to update
      required: true
      schema:
        type: integer
        format: int64
    responses:
      200: 
        $ref: "#/components/responses/Pet"
      404:
        $ref: "../../components/responses.yaml#/404"
      405:
        $ref: "../../components/responses.yaml#/405"                
    security:
    - petstore_auth:
      - write:pets
      - read:pets
    requestBody:
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary      
components:
  schemas:
    Category:
      $ref: "/models/category.yaml#/Category"    
    Tag:
      $ref: "/models/tag.yaml#/Tag"   
    Pet:
      $ref: "/models/pet.yaml#/Pet"  
    StorePet:
      $ref: "/models/pet.yaml#/StorePet"      
  responses:
    Pet:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'   
        application/xml:
          schema:
            $ref: "#/components/schemas/Pet"       
